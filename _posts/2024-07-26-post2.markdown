---
layout: post
title: "Starting to wire things up"
subtitle: "The usual mess"
date: 2024-07-08 12:00:00 +0100
background: /img/posts/1.jpg
categories: [pH-Controller]
author: Tal Akerman
project: pH-Controller
---

<link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.0.3/styles/default.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.0.3/highlight.min.js"></script>
<script>hljs.initHighlightingOnLoad();</script>

So, the usual mess is when I start a new project, and my work table is one big mess of things that I think I need, and my wife comes home and think that I joined some cult that praise wires.

<img src="/img/phcontroller_post2/1.jpg" style="width: 300px; margin: auto; display: block;">

Anyway, in this post I’ll lay out all the components and software functions and will try to work my way form there.

<span><font style="font-weight: bold">Note</font></span> – none of the links or products are affiliated.

<span><font style="font-weight: bold">Note2</font></span> – if you are going to fully follow the build, make sure to use the exact parts so they will fit in the PCB and enclosure.

Our main components for the smart pH controller are:

- <u><a style="color:black; font-style: italic;" href="https://www.aliexpress.com/item/1005005495948290.html">An ESP32 microcontroller</a></u>, or any of your favorite controller. The reason I chose it is because we’re going to work with an OLED screen that requires a bit of memory so Arduino for example will not cut it. Also, maybe in the future I will integrate it with HomeAssistant or build an app for it so Wi-Fi/Bluetooth support is always good to have.
- <u><a style="color:black; font-style: italic;" href="https://www.aliexpress.com/item/32896971385.html">An 0.96” 128x64 OLED screen</a></u> so we can see what’s what.
- <u><a style="color:black; font-style: italic;" href="https://www.aliexpress.com/item/1005006316492659.html">3 buttons</a></u>, the ugliest the better.
- <u><a style="color:black; font-style: italic;" href="https://www.dfrobot.com/product-2069.html">Analog pH meter</a></u>, a lab grade one because we’re going to submerge it in water 24/7, and we also want accurate readings. Make sure to look for a local supplier first so you can maybe save on shipping.
- <u><a style="color:black; font-style: italic;" href="https://www.dfrobot.com/product-1698.html">Digital Peristaltic pump</a></u>, that will dose the pH down solution from a container to your water reservoir. Again, make sure to look for a local supplier first so you can maybe save on shipping.
- <u><a style="color:black; font-style: italic;" href="https://www.amazon.de/-/en/gp/product/B07QHWLTTS">ADC Module ADS1115</a></u> – the analog resolution and accuracy of the ESP32 is not sufficient to get the pH readings accurately so we need to use an external one.
- <u><a style="color:black; font-style: italic;" href="https://www.aliexpress.com/item/1005004903983565.html">DS18B20 water resistant temperature sensor</a></u> – we will use a mathematical formula to calculate the pH readings with a compensation of the water temperature.
- <u><a style="color:black; font-style: italic;" href="https://www.aliexpress.com/item/1005003742132830.html">A DC power connector (type DC007B 5.5x2.1mm)</a></u>
- HDR 1x3 male connectors - you can just take a long one and break it two 3s.
- 5v power supply (5.5x2.1mm) with at least 3A, please do not try to start it with the USB power because it will not work.

Tool you will need:

- A brain (any model will do).
- Soldering tools.
- A 3D printer for the enclosure.
- A bunch of M2 screws and nuts for the enclosure.
- A computer to load the software to the microcontroller.

The planned features:

- Set target pH.
- Set buffer between current and target pH.
- Temperature compensation algorithm for very accurate pH readings.
- Automatic pH meter calibration.
- Automatic Pump flow calibration.
- Dosing amount based on reservoir size.
- Dosing time (i.e check and correct every two hours).
- Manual dosing.
- Dosing test.

The software control is simple to work our way through menus and configurations on the OLED screen– three buttons – Up, Down, and Set.

Next up – the schema and code!


~Tal
